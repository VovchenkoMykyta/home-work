-- Adminer 4.8.1 MySQL 8.0.26-0ubuntu0.20.04.3 dump

SET NAMES utf8;
SET time_zone = '+00:00';
SET foreign_key_checks = 0;
SET sql_mode = 'NO_AUTO_VALUE_ON_ZERO';

DROP TABLE IF EXISTS `Article`;
CREATE TABLE `Article` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `author_id` int unsigned NOT NULL,
  `category_id` int unsigned NOT NULL,
  `title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `description` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `main_text` mediumtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `creation_date` datetime DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `author_id` (`author_id`),
  KEY `category_id` (`category_id`),
  CONSTRAINT `Article_ibfk_1` FOREIGN KEY (`author_id`) REFERENCES `Author` (`id`),
  CONSTRAINT `Article_ibfk_2` FOREIGN KEY (`category_id`) REFERENCES `Category` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Article` (`id`, `author_id`, `category_id`, `title`, `description`, `main_text`, `creation_date`) VALUES
(1,	2,	1,	'Введение',	'Полная настройка системы для работы с Shopware 6',	'<main id=\"page\">\r\n    <div id=\"pageName\">\r\n        <h1>Полная настройка системы для работы с Shopware 6</h1>\r\n        <div class=\"line\"></div>\r\n        <p id=\"actual\">updated 10.09.21</p>\r\n        <p id=\"created\">Created by XShep</p>\r\n    </div>\r\n    <div id=\"pageContent\">\r\n        <h2>Предварительные требования</h2>\r\n        <p>\r\n            Для начала нужно сказать, что все действия и команды работали и были проверены исключительно после\r\n            <b>ПОЛНОЙ</b> переустановки ОС Ubuntu.\r\n            Если ты этого ещё не сделал, но хочешь всё равно выполнить все настройки - пинай на себя, если что-то\r\n            отвалится.\r\n        </p>\r\n        <p>\r\n            Для успешной настройки тебе понадобится:\r\n        </p>\r\n        <ul>\r\n            <li>\r\n                Наличие интернета\r\n            </li>\r\n            <li>\r\n                Прямые руки\r\n            </li>\r\n            <li>\r\n                Иметь пользователя без привилегий root\r\n            </li>\r\n        </ul>\r\n        <p>\r\n            Среднее время всего процесса составляет около <b class=\"twigel\">50-60 минут</b>. Всё зависит от скорости\r\n            твоего\r\n            интернета,\r\n            скорости твоих действий, процессора твоего компуктера, а также его жёсткого диска.\r\n        </p>\r\n        <h2>Установка Apache2</h2>\r\n        <p>\r\n            Первым делом нам нужно установить Apache2. Им ты будешь пользоваться, считай, всё свое рабочее время.\r\n            Именно он открывает ту самую возможность работать через <b class=\"twigel cmd\">localhost</b>. Он нужен\r\n            для\r\n            того, чтобы ты\r\n            мог иметь несколько проектов сразу. Каждый твой проект/сайт превращается в <b class=\"twigel\">виртуальный\r\n                хост</b>.\r\n        </p>\r\n        <p>\r\n            Для начала нужно обновить все репозитории пакетов:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo apt</span> update\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Если это первое использование <span class=\"twigel cmd\">sudo</span> в текущем сеансе, то он попросит\r\n            ввести\r\n            пароль пользователя, после чего все последующие команды буду выполнены без его запроса.\r\n        </p>\r\n        <p>\r\n            Мы обновили все наши репозитории до актуальной версии, теперь можно установить сам Apache:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo apt install</span> apache2\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo apt install apache2\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Далее изменяем настройки брандмауэра, чтобы разрешить трафик HTTP и HTTPS. Нужно проверить доступные\r\n            профили через <span class=\"twigel cmd\">UFW</span>, где мы увидим все доступные профили:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> ufw app list\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo ufw app list\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Как результат мы должны получить примерно вот это:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"output\">Output</span>\r\n            </p>\r\n            <p>\r\n                Available applications:\r\n            </p>\r\n            <ul>\r\n                <li>Apache</li>\r\n                <li>Apache Full</li>\r\n                <li>Apache Secure</li>\r\n                <li>CUPS</li>\r\n            </ul>\r\n        </div>\r\n        <p>\r\n            Нас интересуют первые 3 профиля. Четвертый может отличаться, так что на него не обращаем внимания.\r\n        </p>\r\n        <p>\r\n            Пожалуй опишем каждый из нужных нам профилей:\r\n        </p>\r\n        <ul>\r\n            <li>\r\n                <p>\r\n                    <span class=\"twigel cmd\">Apache</span>: этот профиль открывает только порт <span\r\n                            class=\"twigel cmd\">80</span>\r\n                    (нормальный веб-трафик без шифрования).\r\n                </p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"twigel cmd\">Apache Full</span>: этот профиль открывает порт <span\r\n                            class=\"twigel cmd\">80</span>\r\n                    (нормальный\r\n                    веб-трафик без шифрования) и порт <span class=\"twigel cmd\">443</span> (трафик с шифрованием\r\n                    TLS/SSL).\r\n                </p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"twigel cmd\">Apache Secure</span>: этот профиль открывает только порт <span\r\n                            class=\"twigel cmd\">443</span> (трафик с\r\n                    шифрованием TLS/SSL).\r\n                </p>\r\n            </li>\r\n        </ul>\r\n        <p>\r\n            Проверим настройку профиля <span class=\"twigel cmd\">Apache Full</span>, она должна разрешать трафик для\r\n            портов <span class=\"twigel cmd\">80</span> и <span class=\"twigel cmd\">443</span>:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> ufw app info <span\r\n                        class=\"green\">\"Apache Full\"</span>\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\'sudo ufw app info \"Apache Full\"\'>\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"output\">Output</span>\r\n            </p>\r\n            <p>\r\n                Profile: Apache Full\r\n            </p>\r\n            <p>\r\n                Title: Web Server (HTTP,HTTPS)\r\n            </p>\r\n            <p>\r\n                Description: Apache v2 is the next generation of the omnipresent Apache web\r\n                server.\r\n            </p>\r\n            <br>\r\n            <p>\r\n                Ports:\r\n            </p>\r\n            <ul>\r\n                <li>80,443/tcp</li>\r\n            </ul>\r\n        </div>\r\n        <p>\r\n            Разрешим входящий трафик для этого профиля:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> ufw allow <span class=\"blue\">in</span>\r\n                <span class=\"green\">\"Apache Full\"</span>\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\'sudo ufw allow in \"Apache Full\"\'>\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Проверить результат установки можно, набрав в адресной строке веб-браузера свой локальный адрес\r\n            компуктера:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                http://localhost\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\'http://localhost\'>\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Если всё прошло гладко, то ты увидишь страницу Apache, на которой по умолчанию написана информация для\r\n            целей тестирования и тд. Соответственно, если ты видишь эту страницу (поверь, ты поймешь, что это она),\r\n            то твой веб-сервер корректно установлен и доступен.\r\n        </p>\r\n        <p>Далее мы отключим сайт по умолчанию, дабы не было конфликтов в будущем:</p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> a2dissite 000-default.conf\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo a2dissite 000-default.conf\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            После этого перезапускаем Apache, чтобы изменения вступили в силу:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> systemctl restart apache2\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo systemctl restart apache2\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Далее смотрим статус, для подтверждения успешного перезапуска:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> systemctl status apache2\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo systemctl status apache2\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Если мы видим заветную зеленую лампочку, значит всё, наш веб-сервер готов для обслуживания сайтов. А это\r\n            значит, что мы с тобой успешно установили <span class=\"twigel cmd\">Apache2</span> и теперь можем\r\n            двигаться\r\n            дальше!\r\n        </p>\r\n        <h2>\r\n            Установка MySQL\r\n        </h2>\r\n        <p>\r\n            Когда наш веб-сервер установлен и запущен, пора установить <span class=\"twigel cmd\">MySQL</span>. Это\r\n            система для работы с базой данных. Она организует доступ к базам данных, в которых ваш сайт будет\r\n            хранить информацию.\r\n        </p>\r\n        <p>\r\n            В этом этапе нужно быть очень внимательным, так как невнимательность может привести к переустановке, так\r\n            как ничего не будет работать! Поэтому читай внимательно, и желательно вникай во всё, что тут написано.\r\n        </p>\r\n        <p>\r\n            <span class=\"warn cmd\">Примечание</span>: так как ты в предыдущем этапе использовал команду для\r\n            обновления\r\n            пакетов, то сейчас её можно неиспользовать, <span class=\"warn cmd\">НО</span> я бы рекомендовал это\r\n            сделать,\r\n            чтобы уж точно всё подтянулось как нам нужно.\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo apt</span> update\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Далее устанавливаем сам <span class=\"twigel cmd\">MySQL</span>:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo apt install</span> mysql-server\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo apt install mysql-server\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Для подтверждения установки введи <span class=\"twigel cmd\">Y</span>, и подтверди нажатием на <span\r\n                    class=\"twigel cmd\">ENTER</span>.\r\n        </p>\r\n        <p>\r\n            После завершения установки запускаем скрипт безопасности, чтобы изменить некоторые настройки для\r\n            удобного пользования, а также предотвратить блокировку доступа к базе данных:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> mysql_secure_installation\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo mysql_secure_installation\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Первым делом скрипт предложит настроить плагин <span class=\"twigel cmd\">VALIDATE PASSWORD PLUGIN</span>.\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"output\">Output</span>\r\n            </p>\r\n            <p>\r\n                VALIDATE PASSWORD PLUGIN can be used to test passwords\r\n                and improve security. It checks the strength of password\r\n                and allows the users to set only those passwords which are\r\n                secure enough. Would you like to setup VALIDATE PASSWORD plugin?\r\n            </p>\r\n            <br>\r\n            <p>\r\n                Press y|Y for Yes, any other key for No:\r\n            </p>\r\n        </div>\r\n        <p>\r\n            <b class=\"twigel\">ВНИМАНИЕ!</b> Если тут ты введешь <span class=\"twigel cmd\">Y</span>, то в\r\n            последствии\r\n            ты\r\n            не сможешь нормально настроить пароль, что приведет в дальнейшем к невозможности работать с базой не\r\n            переписывая стандартную конфигурацию подключения. Так как ты будешь пользоваться этим только у себя на\r\n            локалке, можно и нужно ввести <span class=\"twigel cmd\">N</span>.\r\n        </p>\r\n        <p>\r\n            Далее во ситуациях нажимай <span class=\"twigel cmd\">Y</span>, опять же, чтобы всё работало как нам\r\n            нужно.\r\n        </p>\r\n        <p>\r\n            После всех пройденных этапов нам нужно настроить <span class=\"twigel cmd\">root</span> пользователя. Нам\r\n            нужно сменить метод аутентификации с <span class=\"twigel cmd\">auth_socket</span> на <span\r\n                    class=\"twigel cmd\">mysql_native_password</span>. Для этого нам нужно попасть в оболочку <span\r\n                    class=\"twigel cmd\">MySQL</span>:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> mysql\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo mysql\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Далее посмотрим метод аутентификации всех пользователей <span class=\"twigel cmd\">MySQL</span>:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                mysql> SELECT user,authentication_string,plugin,host FROM mysql.user;\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"SELECT user,authentication_string,plugin,host FROM mysql.user;\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>Перед тобой высветится табличка, в которой есть нужная нам строка:</p>\r\n        <div class=\"code\">\r\n            <p>\r\n                root | auth_socket | localhost\r\n            </p>\r\n        </div>\r\n        <p>\r\n            Как мы видим и вправду <span class=\"twigel cmd\">root</span> пользователь использует метод <span\r\n                    class=\"twigel cmd\">auth_socket</span>. Для изменения мы воспользуемся следующей командой:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                mysql> ALTER <span class=\"blue\">USER</span> <span class=\"green\">\'root\'</span>@<span\r\n                        class=\"green\">\'localhost\'</span> IDENTIFIED WITH mysql_native_password BY <span\r\n                        class=\"green\">\'root\'</span>;\r\n            </p>\r\n            <div class=\"copy\"\r\n                 data-cmd=\"ALTER USER \'root\'@\'localhost\' IDENTIFIED WITH mysql_native_password BY \'root\';\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            В конце команды, где написано <span class=\"green cmd\">\'root\'</span> можно ввести другой пароль, но\r\n            рекомендую оставить это так для удобства.\r\n        </p>\r\n        <p>\r\n            Далее нужно применить все внесенные изменения:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                mysql> FLUSH PRIVILEGES;\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"FLUSH PRIVILEGES;\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Теперь проверим то, что мы поменяли, и убедимся, что <span class=\"twigel cmd\">root</span> пользователь\r\n            более не использует <span class=\"twigel cmd\">auth_socket</span> для авторизации:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                mysql> SELECT user,authentication_string,plugin,host FROM mysql.user;\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"SELECT user,authentication_string,plugin,host FROM mysql.user;\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Как мы видим, всё прошло гладко, и мы настроили доступ к базе данных. Теперь можем выходить из оболочки\r\n            <span class=\"twigel cmd\">MySQL</span>:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                mysql> <span class=\"twigel\">exit</span>\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"exit\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Теперь наша система управления базами данных установлена и настроена под наши нужды. Двигаемся к\r\n            следующему этапу!\r\n        </p>\r\n        <h2>Установка PHP</h2>\r\n        <p>\r\n            Это компонент, который будет обрабатывать код для отображения\r\n            динамического контента. Собственно он будет запускать скрипты, работать с базами данных, и отображать\r\n            всю полученную информацию на веб-сервере.\r\n        </p>\r\n        <p>\r\n            Опять же обновим все доступные пакеты:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo apt</span> update\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            После этого устанавливаем <span class=\"twigel cmd\">PHP</span>, а также все нужные нам для работы аддоны\r\n            к нему:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo apt install</span> php libapache2-mod-php\r\n                php-mcrypt php-mysql php-cli\r\n                php-xml\r\n            </p>\r\n            <div class=\"copy\"\r\n                 data-cmd=\"sudo apt install php libapache2-mod-php php-mcrypt php-mysql php-cli php-xml\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            После небольшого ожидания можно проверить всё ли установилось и работает:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span>php --version\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"php --version\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"output\">Output</span>\r\n            </p>\r\n            <p>\r\n                PHP 7.4.3 (cli) (built: Mar 26 2020 20:24:23) ( NTS )\r\n            </p>\r\n            <p>\r\n                Copyright (c) The PHP Group\r\n            </p>\r\n            <p>\r\n                Zend Engine v3.4.0, Copyright (c) Zend Technologies\r\n                with Zend OPcache v7.4.3, Copyright (c), by Zend Technologies\r\n            </p>\r\n        </div>\r\n        <p>\r\n            Видим, что <span class=\"twigel cmd\">PHP</span> успешно установился. Далее мы изменим приоритет по\r\n            обработке индексных файлов. Для этого мы откроем файл <span class=\"twigel cmd\">dir.conf</span> в\r\n            текстовом редакторе с правами администратора:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo nano</span> /etc/apache2/mods-enabled/dir.conf\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo nano /etc/apache2/mods-enabled/dir.conf\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Перед тобой откроется содержимое файла, в котором будет вот такая строка:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                DirectoryIndex index.html index.cgi index.pl <span class=\"green\">index.php</span> index.xhtml\r\n                index.htm\r\n            </p>\r\n        </div>\r\n        <p>\r\n            Для быстрого обнаружения я выделил зеленым цветом нужный нам <span class=\"twigel cmd\">index.php</span>.\r\n            Нам нужно\r\n            поставить его на самое первое место, чтобы он находился в максимальном приоритете на запуск.\r\n        </p>\r\n        <p>\r\n            Используя прямые ручки и стрелочки на клавиатуре двигаемся к нашему индексному файлу, удаляем его с\r\n            четвертого\r\n            места и прописываем его на первом. Должно получиться вот так:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                DirectoryIndex <span class=\"green\">index.php</span> index.html index.cgi index.pl index.xhtml\r\n                index.htm\r\n            </p>\r\n        </div>\r\n        <p>\r\n            Далее сохраняем файл нажатием комбинации клавишь <span class=\"twigel cmd\">CTRL+O</span>, подтверждаем\r\n            клавишей <span class=\"twigel cmd\">ENTER</span> и закрываем файл комбинацией <span\r\n                    class=\"twigel cmd\">CTRL+X</span>.\r\n        </p>\r\n        <p>\r\n            Теперь нам нужно перезапустить <span class=\"twigel cmd\">Apache</span> для применения внесенных\r\n            изменений:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> systemctl restart apache2\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo systemctl restart apache2\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            И проверяем, нормально ли прошел перезапуск:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> systemctl status apache2\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo systemctl status apache2\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Собственно всё. Мы успешно установили <span class=\"twigel cmd\">PHP</span> и настроили приоритет. Можно\r\n            двигаться дальше.\r\n        </p>\r\n        <h2>Установка Docker, Docker-Compose, Composer</h2>\r\n        <p>\r\n            Это, наверно, один из важнейших этапов нашей установки. Судя по практике именно тут возникает\r\n            большинство ошибок, или что-то не работает, или не запускается. Поэтому тут главное не напортачить!\r\n        </p>\r\n        <p>\r\n            Начнем с установки <span class=\"twigel cmd\">Docker</span>. Это компонент, который собирает сайт как\r\n            конструктор, отдельными частями. Если я говорил что <span class=\"twigel cmd\">Apache</span> мы будем\r\n            использовать постоянно, то \"общаться\" с сайтом мы будем через <span class=\"twigel cmd\">Docker</span>.\r\n        </p>\r\n        <p>\r\n            Первое, что мы сделаем - обновим пакеты:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo apt-get</span> update\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo apt-get update\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Далее установим нужные нам репозитории:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo apt-get install</span> apt-transport-https\r\n                ca-certificates curl gnupg\r\n                lsb-release\r\n            </p>\r\n            <div class=\"copy\"\r\n                 data-cmd=\"sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Теперь добавляем официальный <span class=\"twigel cmd\">Docker GPG</span> ключ:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span>curl <span class=\"green\">-fsSL</span>\r\n                https://download.docker.com/linux/ubuntu/gpg | <span class=\"twigel\">sudo</span> gpg <span\r\n                        class=\"green\">--dearmor -o</span>\r\n                /usr/share/keyrings/docker-archive-keyring.gpg\r\n            </p>\r\n            <div class=\"copy\"\r\n                 data-cmd=\"curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Далее компонуем это всё с нашим <span class=\"twigel cmd\">Docker</span>:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">echo</span> \"deb [arch=amd64\r\n                signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu\r\n                <span class=\"blue\">$(</span><span class=\"green\">lsb_release\r\n						-cs</span><span class=\"blue\">)</span>\r\n                stable\" | <span class=\"twigel\">sudo</span> tee\r\n                /etc/apt/sources.list.d/docker.list > /dev/null\r\n            </p>\r\n            <div class=\"copy\"\r\n                 data-cmd=\'echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\'>\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Снова обновляем пакеты, так как мы добавили новый репозиторий:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo apt-get</span> update\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo apt-get update\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            И устанавливаем <span class=\"twigel cmd\">Docker Engine</span>:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo apt-get install</span> docker-ce docker-ce-cli\r\n                containerd.io\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo apt-get install docker-ce docker-ce-cli containerd.io\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Немного подождали завершения установки и можем проверить всё ли у нас работает:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> docker run hello-world\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo docker run hello-world\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Скорее всего он сразу напишет, что не может подтянуть картинки, после чего сам же их загрузит и\r\n            покажется нам.\r\n        </p>\r\n        <p>\r\n            Теперь продолжим наш пусть установкой <span class=\"twigel cmd\">Docker-Compose</span>. Добавляем нужный\r\n            нам репозиторий:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> curl <span class=\"green\">-L</span>\r\n                \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\"\r\n                <span class=\"green\">-o</span>\r\n                /usr/local/bin/docker-compose\r\n            </p>\r\n            <div class=\"copy\"\r\n                 data-cmd=\'sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\'>\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Даем ему все права для работы:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> chmod +x /usr/local/bin/docker-compose\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\'sudo chmod +x /usr/local/bin/docker-compose\'>\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            И по идее всё. Осталось только проверить всё ли у нас поставилось:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span>docker-compose --version\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\'docker-compose --version\'>\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Если нам показывается версия, то всё окей. Переходим к установке <span\r\n                    class=\"twigel cmd\">Composer</span>. Снова обновим пакеты:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo apt</span> update\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Ставим нужные нам штуки как для <span class=\"twigel cmd\">PHP</span>, так и для <span\r\n                    class=\"twigel cmd\">Shopware 6</span>:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo apt install</span> php-mbstring unzip\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo apt install php-mbstring unzip\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Далее качаем установщик нашего <span class=\"twigel cmd\">Composer</span>:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span>curl <span class=\"green\">-sS</span> https://getcomposer.org/installer\r\n                <span class=\"green\">-o</span> composer-setup.php\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"curl -sS https://getcomposer.org/installer -o composer-setup.php\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Далее ставим актуальный хэш установщика. Если он не будет совпадать, то далее при установке вылетит\r\n            ошибка. Поэтому меняем его:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"green\">HASH</span>=`curl -sS\r\n                https://composer.github.io/installer.sig`\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"HASH=`curl -sS https://composer.github.io/installer.sig`\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            После чего уже запускаем проверку установщика:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span>php -r \"<span class=\"green\">if</span> (hash_file(\'SHA384\',\r\n                \'composer-setup.php\') === \'$HASH\') {\r\n                <span class=\"twigel\">echo</span> \'Installer verified\'; }\r\n                <span class=\"green\">else</span> { <span class=\"twigel\">echo</span> \'Installer corrupt\';\r\n                unlink(\'composer-setup.php\'); } <span class=\"twigel\">echo</span>\r\n                PHP_EOL;\"\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"php -r &quot;if (hash_file(\'SHA384\', \'composer-setup.php\') === \'$HASH\') { echo \'Installer verified\'; } else { echo \'Installer corrupt\';\r\n					unlink(\'composer-setup.php\'); } echo PHP_EOL;&quot;\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            После этих действий мы должны увидеть вот это:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"output\">Output</span>\r\n            </p>\r\n            <p>\r\n                Installer verified\r\n            </p>\r\n        </div>\r\n        <p>\r\n            Если в выводе мы видим <span class=\"twigel cmd\">Installer corrupt</span>, то нужно снова загрузить\r\n            скрипт\r\n            установки и ещё раз убедится, что у нас правильный хэш. Его можно посмотреть на странице <a\r\n                    href=\"https://composer.github.io/pubkeys.html\" target=\"_blank\" rel=\"noopener noreferrer\">Composer\r\n                Public Keys / Signatures</a>. Однако, ошибки произойти не должно.\r\n        </p>\r\n        <p>\r\n            Теперь уже можно запустить там установщик:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> php composer-setup.php\r\n                --install-dir=/usr/local/bin\r\n                --filename=composer\r\n            </p>\r\n            <div class=\"copy\"\r\n                 data-cmd=\"sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Вывод будет выглядеть следующим образом:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"output\">Output</span>\r\n            </p>\r\n            <p>\r\n                All settings correct for using Composer\r\n            </p>\r\n            <p>\r\n                Downloading...\r\n            </p>\r\n            <br>\r\n            <p>\r\n                Composer (version 1.10.5) successfully installed to: /usr/local/bin/composer\r\n            </p>\r\n            <p>\r\n                Use it: php /usr/local/bin/composer\r\n            </p>\r\n        </div>\r\n        <p>\r\n            Тестируем установку, запустив сам <span class=\"twigel cmd\">Composer</span>:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span>composer\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"composer\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Если мы видим много разных команд и тд - значит наш диспетчер зависимостей <span\r\n                    class=\"twigel cmd\">Composer</span> был успешно установлен и доступен в рамках всех системы.\r\n        </p>\r\n        <p>\r\n            Итого мы установили все три компонента для работы <span class=\"twigel cmd\">Docker</span>. Теперь мы\r\n            доставим\r\n            нас в группу пользователей, чтобы кое-кто не вы..пендривался. Проверим существует ли группа. Если её не\r\n            будет - она создастся автоматически:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> groupadd docker\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo groupadd docker\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Далее добавляем нашего пользователя в эту группу:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo</span> usermod <span class=\"green\">-aG</span>\r\n                docker <span class=\"blue\">$USER</span>\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo usermod -aG docker $USER\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            В общем мы закончили с установкей всех компонентов. Нам осталось установить сам <span\r\n                    class=\"twigel cmd\">Shopware 6</span> и успешно запустить его.\r\n        </p>\r\n        <h2>Установка Shopware 6</h2>\r\n        <p>\r\n            Финальный этап. Для начала нам нужно создать директорию, где будут храниться все наши проекты. Так\r\n            намного удобнее, чем все проекты буду сразу в корневом каталоге. Создаем папку:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">mkdir</span> Projects\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"mkdir Projects\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Переходим в этот каталог и создаем там новый, конкретно под наш проект:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">cd</span> Projects && <span\r\n                        class=\"twigel\">mkdir</span> test\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"cd Projects && mkdir test\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Далее клонируем всё из репозитория <span class=\"twigel cmd\">Shopware 6</span>:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span>git clone https://github.com/shopware/development\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"git clone https://github.com/shopware/development\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Так как мы скачали версию <span class=\"twigel cmd\">development</span>, нам нужно удалить папку <span\r\n                    class=\"green cmd\">platform</span> и поставить версию от <span class=\"twigel cmd\">production</span>:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">rm</span> <span class=\"green\">-rf</span> platform\r\n                && git clone https://github.com/shopware/platform\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"rm -rf platform && git clone https://github.com/shopware/platform\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Загрузка идет минуты две, так что можно пойти поставить чайничек.\r\n        </p>\r\n        <p>\r\n            После загрузки всего вышеперечисленного нам нужно поменять версию на последнюю стабильную (на данный\r\n            момент актуально <span class=\"twigel cmd\">v6.4.3.1</span>):\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span>git checkout <span class=\"blue\">v6.4.3.1</span>\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"git checkout v6.4.3.1\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Также это делаем и в самом каталоге <span class=\"green cmd\">platform</span> и возвращаемся обратно:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">cd</span> platform && git checkout <span\r\n                        class=\"blue\">v6.4.3.1</span> &&\r\n                <span class=\"twigel\">cd</span> ../\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"cd platform && git checkout v6.4.3.1 && cd ../\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Теперь начинаются танцы с бубном, которые все в этой команде разработчиков уже выусили наизусть.\r\n            Исправление неисправностей, которые разработчики <span class=\"twigel cmd\">Shopware 6</span> посчитали не\r\n            как баги, а как фичи.\r\n        </p>\r\n        <p>\r\n            Первым делом надо исправить ссылку для работы с <span class=\"twigel cmd\">Docker</span>. Мы назвали эту\r\n            ошибку <span class=\"green cmd\">Неисправность -fsSL</span>. Нам нужно в конфиге добавить одну цифру,\r\n            чтобы это завелось. Займемся же этим:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo nano</span>\r\n                dev-ops/docker/containers/app/Dockerfile\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo nano dev-ops/docker/containers/app/Dockerfile\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Перед нами открылся редактор файлов с кодом внутри. Нам нужно найти такую строчку:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"comment\"># Install docker</span>\r\n            </p>\r\n            <p>\r\n                && curl <span class=\"green\">-fsSL</span> https://download.docker.com/linux/debian/gpg | apt-key add\r\n                - \\\r\n            </p>\r\n        </div>\r\n        <p>\r\n            Вот тут перед заветным <span class=\"green cmd\">-fsSL</span> мы должны поставить цифру <span\r\n                    class=\"green cmd\">4</span>. Должно получиться вот так:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                && curl <span class=\"green\">-4fsSL</span> https://download.docker.com/linux/debian/gpg | apt-key add\r\n                - \\\r\n            </p>\r\n        </div>\r\n        <p>\r\n            Далее сохраняем файл уже известной нам комбинацией клавишь <span class=\"twigel cmd\">CTRL+O</span>,\r\n            подтверждаем\r\n            клавишей <span class=\"twigel cmd\">ENTER</span> и закрываем файл комбинацией <span\r\n                    class=\"twigel cmd\">CTRL+X</span>.\r\n        </p>\r\n        <p>\r\n            Следующая проблема - <span class=\"green cmd\">Image Generator</span>. Для её устранения заходим в другой\r\n            конфиг:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"twigel\">sudo nano</span>\r\n                dev-ops/common/actions/demo-data.sh\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo nano dev-ops/common/actions/demo-data.sh\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"output\">Output</span>\r\n            </p>\r\n            <p>\r\n                #!/usr/bin/env bash\r\n            </p>\r\n            <p>\r\n                #DESCRIPTION: creates a demo data set\r\n            </p>\r\n            <br>\r\n            <p>\r\n                APP_ENV=prod bin/console framework:demodata\r\n            </p>\r\n            <p>\r\n                APP_ENV=prod bin/console dal:refresh:index\r\n            </p>\r\n            <br>\r\n            <p>\r\n                <span class=\"comment\"># clear cache</span>\r\n            </p>\r\n            <p>\r\n                INCLUDE: ./cache.sh\r\n            </p>\r\n        </div>\r\n        <p>\r\n            Здесь мы комментируем первую строчку <span class=\"twigel cmd\">APP_ENV</span>. В итоге должно быть вот\r\n            так:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                #!/usr/bin/env bash\r\n            </p>\r\n            <p>\r\n                #DESCRIPTION: creates a demo data set\r\n            </p>\r\n            <br>\r\n            <p>\r\n                <span class=\"comment\"># APP_ENV=prod bin/console framework:demodata</span>\r\n            </p>\r\n            <p>\r\n                APP_ENV=prod bin/console dal:refresh:index\r\n            </p>\r\n            <br>\r\n            <p>\r\n                <span class=\"comment\"># clear cache</span>\r\n            </p>\r\n            <p>\r\n                INCLUDE: ./cache.sh\r\n            </p>\r\n        </div>\r\n        <p>\r\n            Далее сохраняем и выходим отсюда.\r\n        </p>\r\n        <p>\r\n            Вроде бы всё сделали, можно было бы запустить проект, но нам нужно <span class=\"warn cmd\">Перезапустить\r\n					систему</span>. Мы много где меняли права, так что перезапускаем компуктер и возвращаемся сюда.\r\n        </p>\r\n        <h2>Первый запуск Docker</h2>\r\n        <p>\r\n            Финишная прямая. После перезапуска запускаем терминал сочитанием <span\r\n                    class=\"twigel cmd\">CTRL+ALT+T</span>. Переходим в нашу директорию с проектом, после чего,\r\n            пританцовывая с заранее купленным бубном, запускаем <span class=\"twigel cmd\">Docker</span>:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"green\">./psh.phar</span> docker:start\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"./psh.phar docker:start\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Если на третьем этапе запуска мы не видим кучу ошибок - значит ты всё сделал правильно (надеюсь с\r\n            первого раза)! Ждем около <span class=\"warn cmd\">5-6 минут</span>, пока наш заветный <span\r\n                    class=\"twigel cmd\">Docker</span> запустится и установит первую часть компонентов.\r\n        </p>\r\n        <p>\r\n            Если всё прошло гладко, то мы увидим в конце вот это:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                All commands successfully executed!\r\n            </p>\r\n        </div>\r\n        <p>\r\n            Теперь мы заходим в <span class=\"twigel cmd\">SSH</span> для контроля проекта:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"green\">./psh.phar</span> docker:ssh\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"./psh.phar docker:ssh\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            И завершаем первичную установку следующей командой:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"green\">./psh.phar</span> install\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"./psh.phar install\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Ну как завершаем.. Ждем около <span class=\"warn cmd\">5-10 минут</span> (всё зависит от процессора).\r\n            Пятьдесят два этапа установки\r\n            дадут тебе время перекусить и отдохнуть чуток.\r\n        </p>\r\n        <p>\r\n            Если установка закончилась без ошибок, то можешь пойти и взять с полки пирожок. Ты полностью установил\r\n            проект и можешь начинать с ним работать!\r\n        </p>\r\n    </div>\r\n</main>\r\n',	'2021-09-10 18:32:07'),
(2,	1,	1,	'Старт',	'Создание плагина болванки',	'<main id=\"page\">\r\n    <div id=\"pageName\">\r\n        <h1>Создане плагина Shopware 6</h1>\r\n        <div class=\"line\"></div>\r\n        <p id=\"actual\">updated 13.09.21</p>\r\n        <p id=\"created\">Created by VovchenkoMykyta</p>\r\n    </div>\r\n    <div id=\"pageContent\">\r\n        <h2>Предварительные требования</h2>\r\n        <p>\r\n            Ты должен был выполнить все настройки из статьи <a href=\"start\">Введение</a>, прежде чем приступать к созданию плагина.\r\n        </p>\r\n        <p>\r\n            Займет весь процесс около <b class=\"twigel cmd\">5-10 минут</b>. Всё зависит от скорости чтения этой статьи и печати,\r\n            а также умения пользоваться консолью (можно не только стандартной).\r\n        </p>\r\n        <h2>Создание плагина</h2>\r\n        <p>\r\n            Первым делом открой любую консоль.\r\n        </p>\r\n        <p>\r\n            И введи команду:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"green\">bin/console </span> plugin:refresh\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Если у тебя в проекте в директории <b class=\"twigel cmd\">custom/plugins/</b> нет никах других папок, то ты увидишь пустую таблицу.\r\n        </p>\r\n        <p>\r\n            Следующим шагом будет создание плагина-болванки, его можно создавать ручками по официальной документации Shopware6 либо воспользоваться встроенной командой по созданию такого плагина\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"green\">bin/console </span> plugin:create PLUGIN_NAME\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo apt install apache2\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            После чего в твоей дериктории плагинов появится папка с нужными тебе файлами, в частности <b class=\"twigel cmd\">composer.json</b> и <b class=\"twigel cmd\">PLUGIN_NAME.php</b> базовый класс.\r\n        </p>\r\n        <p>\r\n            Пока что опустим ситуацию с настраиванием плагина и просто его установим.\r\n        </p>\r\n        <h2>\r\n            Установка плагина\r\n        </h2>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"green\">bin/console</span> plugin:install --activate PLUGIN_NAME\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo ufw app list\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Как результат мы должны получить ЗЕЛЕНОЕ сообщение о том, что все получилось примерно такого характера:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"output\">Output</span>\r\n            </p>\r\n            <p>\r\n                Available applications:\r\n            </p>\r\n            <ul>\r\n                <li> Install 1 plugin(s):</li>\r\n                <li>* The displayed readable name for the plugin (v1.0.0)</li>\r\n                <li></li>\r\n                <li>Plugin \"PLUGIN_NAME\" has been installed and activated successfully.</li>\r\n            </ul>\r\n        </div>\r\n        <p>\r\n            Чтобы удостовериться, что плагин установился, необходимо обновить таблицу с плагинами\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"bash\">$ </span><span class=\"green\">bin/console </span> plugin:refresh\r\n            </p>\r\n            <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            Примерный вывод должен быть такой:\r\n        </p>\r\n        <div class=\"code\">\r\n            <p>\r\n                <span class=\"output\">Output</span>\r\n            </p>\r\n            <p>\r\n                Available applications:\r\n            </p>\r\n            <ul>\r\n                <li>Plugin_name---label---1.0.0---Shopware---Yes---Yes---No</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</main>',	'2021-09-13 15:00:00'),
(3,	1,	1,	'CMS видео элемент',	'Создание видео элемента для работы с YouTube, Vimeo и загруженными в админку',	'<?php\r\n?>\r\n\r\n<main id=\"page\">\r\n    <div id=\"pageName\">\r\n        <h1>Создане видео элемента Shopware 6</h1>\r\n        <div class=\"line\"></div>\r\n        <p id=\"actual\">updated 27.09.21</p>\r\n        <p id=\"created\">Created by VovchenkoMykyta</p>\r\n    </div>\r\n    <div id=\"pageContent\">\r\n        <h2>Для начала</h2>\r\n        <p>\r\n            Если не заглядывал в статью <a href=\"plugin\">Старт</a>, то настоятельно рекомендую посмотреть, прежде чем\r\n            приступать к созданию\r\n            видео элемента.\r\n        </p>\r\n        <h2>Создание элемента</h2>\r\n        <p>\r\n            Первым делом в твоем плагине должна быть уже папка <b class=\"twigel cmd\">\r\n                .../Resources/app/administration/src/module/sw-cms/</b>.\r\n            В этой директории создай папку <b class=\"twigel cmd\">elements</b>, в которую ты положишь свой элемент.\r\n            Назвние папки элемента не имеет значение, главное, чтобы оно было понятным для остальных, что там за\r\n            элемент. Я назаву элемент <b class=\"twigel cmd\">video</b>.\r\n        </p>\r\n        <p>\r\n            Создай внутри твоего элемента файл <b class=\"twigel warn\">index.js</b>\r\n        </p>\r\n        <div class=\"code\">\r\n            <div class=\"file\">\r\n                <span class=\"output\">.../app/administration/src/module/sw-cms/elements/video/index.js</span>\r\n                <div>Shopware.Service(\"cmsService\").registerCmsElement({</div>\r\n                <div class=\"text\">name: \"video\",</div>\r\n                <div class=\"text\">label: \"Label\",</div>\r\n                <div class=\"text\">component: \"sw-cms-el-video\",</div>\r\n                <div class=\"text\">configComponent: \"sw-cms-el-config-video\",</div>\r\n                <div class=\"text\">previewComponent: \"sw-cms-el-preview-video\",</div>\r\n                <div class=\"text\">defaultConfig: {</div>\r\n                <div class=\"text-second\">dailyUrl: {</div>\r\n                <div class=\"text-third\">source: \"static\",</div>\r\n                <div class=\"text-third\">value: \"\",</div>\r\n                <div class=\"text-second\">},</div>\r\n                <div class=\"text\">},</div>\r\n                <div>});</div>\r\n            </div>\r\n            <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            В директории элемента созадай папки <b class=\"twigel cmd\">component</b>, <b class=\"twigel cmd\">config</b>,\r\n            <b class=\"twigel cmd\">preview</b>.\r\n        </p>\r\n        <h2>Создаем компанент текущего элемента</h2>\r\n        <p>\r\n            Следующим шагом давай создадим компонент в папке <b class=\"twigel cmd\">component</b>. Создай внутри этой\r\n            папки файл <b class=\"twigel warn\">index.js</b>\r\n        </p>\r\n        <div class=\"code\">\r\n            <div class=\"file\">\r\n                <span class=\"output\">app/administration/src/module/sw-cms/elements/video/component</span>\r\n                <div>import template from \'./sw-cms-el-video.html.twig\';</div>\r\n                <div>import \'./sw-cms-el-video.scss\';</div>\r\n                <div>Shopware.Component.register(\'sw-cms-el-video\', {</div>\r\n                <div class=\"text\">template,</div>\r\n                <div class=\"text\">mixins: [</div>\r\n                <div class=\"text-second\">\'cms-element\'</div>\r\n                <div class=\"text\">],</div>\r\n\r\n                <div class=\"text\">data() {</div>\r\n                <div class=\"text-second\">return {};</div>\r\n                <div class=\"text\">},</div>\r\n\r\n                <div class=\"text\">created() {</div>\r\n                <div class=\"text-second\">this.createdComponent();</div>\r\n                <div class=\"text\">},</div>\r\n\r\n                <div class=\"text\">methods: {</div>\r\n                <div class=\"text-second\">createdComponent() {</div>\r\n                <div class=\"text-third\">this.initElementConfig(\'video\');</div>\r\n                <div class=\"text-second\">}</div>\r\n                <div class=\"text\">}</div>\r\n                <div>});</div>\r\n            </div>\r\n            <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            После чего создай файл <b class=\"twigel green\"> sw-cms-el-video.html.twig</b>\r\n        </p>\r\n        <div class=\"code\">\r\n            <div class=\"file\">\r\n                <span class=\"output\">app/administration/src/module/sw-cms/elements/video/component</span>\r\n                <div>{% block sw_cms_element_video %}</div>\r\n                <div class=\"text\">< div class=\"sw-cms-preview-twigel\" ></div>\r\n                <div class=\"text-second\"> < img :src=\"\'/test/static/logo-twigel.png\' | asset\" ></div>\r\n                <div class=\"text-second\"> < p >Video< /p ></div>\r\n                <div class=\"text\">< /div ></div>\r\n                <div>{% endblock %}</div>\r\n            </div>\r\n            <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            А также можно создать файл <b class=\"twigel blue\">sw-cms-el-video.scss</b> в котором ты можешь стилить\r\n            элемент как тебе нужно.\r\n        </p>\r\n        <h2>Создание предварительного просмотра элемента</h2>\r\n        <p>\r\n            В папке <b class=\"twigel cmd\">preview</b> создай <b class=\"twigel warn\">index.js</b>\r\n        </p>\r\n        <div class=\"code\">\r\n            <div class=\"file\">\r\n                <span class=\"output\">app/administration/src/module/sw-cms/elements/video/preview</span>\r\n                <div>import template from \"./sw-cms-el-preview-video.html.twig\";</div>\r\n                <div>import \"./sw-cms-el-preview-video.scss\";</div>\r\n\r\n                <div>Shopware.Component.register(\"sw-cms-el-preview-video\", {</div>\r\n                <div class=\"text\">template,</div>\r\n                <div>});</div>\r\n            </div>\r\n            <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n        <p>\r\n            После чего создай файл <b class=\"twigel green\"> sw-cms-el-preview-video.html.twig</b>\r\n        </p>\r\n        <div class=\"code\">\r\n            <div class=\"file\">\r\n                <span class=\"output\">app/administration/src/module/sw-cms/elements/video/preview</span>\r\n                <div>{% block sw_cms_element_video_preview %}</div>\r\n                <div class=\"text\">< div class=\"sw-cms-preview-twigel\" ></div>\r\n                <div class=\"text-second\">< img :src=\"\'/test/static/logo-twigel.png\' | asset\" ></div>\r\n                <div class=\"text-second\">< p >Video< /p ></div>\r\n                <div class=\"text\">< /div ></div>\r\n                <div>{% endblock %}</div>\r\n            </div>\r\n            <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                Copy\r\n            </div>\r\n            <div class=\"copied\">\r\n                Copied!\r\n            </div>\r\n        </div>\r\n            <p>\r\n                А также можешь создать файл <b class=\"twigel blue\">sw-cms-el-preview-video.scss</b> в котором ты можешь\r\n                стилить предварительный просмотр элемента как тебе нужно.\r\n            </p>\r\n            <h2>Создаем конфигурации для этого элемента</h2>\r\n            <p>\r\n                В папке <b class=\"twigel cmd\">config</b> создай <b class=\"twigel warn\">index.js</b>\r\n            </p>\r\n            <div class=\"code\">\r\n                <div class=\"file\">\r\n                    <span class=\"output\">app/administration/src/module/sw-cms/elements/video/config</span>\r\n                    <div>import template from \'./sw-cms-el-config-video.html.twig\';</div>\r\n\r\n                    <div>Shopware.Component.register(\'sw-cms-el-config-video\', {</div>\r\n                    <div class=\"text\">template,</div>\r\n\r\n                    <div class=\"text\">mixins: [</div>\r\n                    <div class=\"text-second\">\'cms-element\'</div>\r\n                    <div class=\"text\">],</div>\r\n\r\n                    <div class=\"text\">computed: {},</div>\r\n\r\n                    <div class=\"text\">created() {</div>\r\n                    <div class=\"text-second\">this.createdComponent();</div>\r\n                    <div class=\"text-second\">this.dailyUrl();</div>\r\n                    <div class=\"text\">},</div>\r\n\r\n                    <div class=\"text\">methods: {</div>\r\n                    <div class=\"text-second\">createdComponent() {</div>\r\n                    <div class=\"text-third\">this.initElementConfig(\'video\');</div>\r\n                    <div class=\"text-second\">},</div>\r\n                    <div class=\"text-second\">dailyUrl() {</div>\r\n                    <div class=\"text-third\">let url = this.element.config.dailyUrl.value;</div>\r\n                    <div class=\"text-third\">url = url.split(\'/\');</div>\r\n                    <div class=\"text-third\">if (url[2] === \'youtu.be\' || url[2] === \'www.youtube.com\') {</div>\r\n                    <div class=\"text-fours\">if (url[2] === \'www.youtube.com\') {</div>\r\n                    <div class=\"text-fours\">let newUrl = url[url.length - 1].split(\'=\');</div>\r\n                    <div class=\"text-fours\">let hash = newUrl[1].split(\"&\");</div>\r\n                    <div class=\"text-fours\">this.element.config.dailyUrl.value = \'https://www.youtube.com/embed/\' + hash[0];</div>\r\n                    <div class=\"text-fours\">} else {</div>\r\n                    <div class=\"text-fours\">let newUrl = url[url.length - 1].split(\'?\');</div>\r\n                    <div class=\"text-fours\">this.element.config.dailyUrl.value = \'https://www.youtube.com/embed/\' + newUrl[0];</div>\r\n                    <div class=\"text-fours\">}</div>\r\n                    <div class=\"text-third\">}else if(url[2] === \'vimeo.com\' || url[2] === \'player.vimeo.com\'){</div>\r\n                    <div class=\"text-fours\">let hash = url[url.length - 1].split(\"#\");</div>\r\n                    <div class=\"text-fours\">this.element.config.dailyUrl.value = \"https://player.vimeo.com/video/\" + hash[0];</div>\r\n                    <div class=\"text-third\">}else{</div>\r\n                    <div class=\"text-fours\">this.element.config.dailyUrl.value = this.element.config.dailyUrl.value;</div>\r\n                    <div class=\"text-third\">}</div>\r\n                    <div class=\"text-second\">}</div>\r\n                    <div class=\"text\">}</div>\r\n                    <div>});</div>\r\n                </div>\r\n                <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                    Copy\r\n                </div>\r\n                <div class=\"copied\">\r\n                    Copied!\r\n                </div>\r\n            </div>\r\n            <p>\r\n                После чего создай файл <b class=\"twigel green\"> sw-cms-el-config-video.html.twig</b>\r\n            </p>\r\n            <div class=\"code\">\r\n                <div class=\"file\">\r\n                    <span class=\"output\">app/administration/src/module/sw-cms/elements/video/config</span>\r\n                    <div>{% block sw_cms_element_video_config %}</div>\r\n                    <div class=\"text\">< sw-text-field</div>\r\n                    <div class=\"text-second\">:label=\"$tc(\'sw-cms.elements.video.title\')\"</div>\r\n                    <div class=\"text-second\">v-model=\"element.config.dailyUrl.value\"</div>\r\n                    <div class=\"text-second\">:copyable=\"false\"</div>\r\n                    <div class=\"text-second\">:copyableTooltip=\"false\"></div>\r\n                    <div class=\"text\">< /sw-text-field ></div>\r\n                    <div>{% endblock %}</div>\r\n                </div>\r\n                <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                    Copy\r\n                </div>\r\n                <div class=\"copied\">\r\n                    Copied!\r\n                </div>\r\n            </div>\r\n            <p>\r\n                А также можешь создать файл <b class=\"twigel blue\">sw-cms-el-config-video.scss</b> в котором ты можешь стилить\r\n                элемент как тебе нужно.\r\n            </p>\r\n            <h2>Не забываем за подключение всего</h2>\r\n            <p>\r\n                После того, как мы все создали необходимо все подключить сначала в главный <b\r\n                        class=\"twigel warn\">index.js</b> файл данного элемента, чтобы подтянуть все стили и прочее.\r\n            </p>\r\n            <p>\r\n                После чего необходимо подключить наш главный <b class=\"twigel warn\">index.js</b>, в <b\r\n                        class=\"twigel warn\">main.js</b>,\r\n                который находится в папке <b class=\"twigel cmd\">/app/administration/src/module</b>.\r\n            </p>\r\n            <h2>Отображение на фронте</h2>\r\n            <p>\r\n                Для того, чтобы увидеть свой элемент на сайте тебе необходимо создать для него twig-файл который будет\r\n                отвечать за отображение твоего элемента.</p>\r\n            <p>Создать его нужно в папке <b class=\"twigel cmd\">.../Resources/views/storefront/element/</b>.</p>\r\n            <p>Название файла <b class=\"twigel green\">cms-element-video.html.twig</b>.</p>\r\n            <div class=\"code\">\r\n                <div class=\"file\">\r\n                    <span class=\"output\">.../Resources/views/storefront/element/</span>\r\n                    <div>  {% block element_dailymotion %}</div>\r\n                    <div class=\"text\">< div v-for=\"block in page.cmsPage.sections.elements\" v-if=\"block.blocks.elements\"></div>\r\n                    <div class=\"text-second\">{% for elem in block.slots.elements %}</div>\r\n                    <div class=\"text-third\">< iframe width=\"100%\" height=\"650px\" src=\"{{ elem.config[\'dailyUrl\'][\'value\'] }}\" title=\"YouTube video player\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><  /iframe></div>\r\n                    <div class=\"text-second\">{% endfor %}</div>\r\n                    <div class=\"text\">< /div ></div>\r\n                    <div>{% endblock %}</div>\r\n                </div>\r\n                <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                    Copy\r\n                </div>\r\n                <div class=\"copied\">\r\n                    Copied!\r\n                </div>\r\n            </div>\r\n            <h2>Как же заставить все это работать</h2>\r\n            <p>\r\n                Для начала советую почистить кеш.\r\n            </p>\r\n            <div class=\"code\">\r\n                <p>\r\n                    <span class=\"bash\">$ </span><span class=\"green\">bin/console </span> cache:clear\r\n                </p>\r\n                <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                    Copy\r\n                </div>\r\n                <div class=\"copied\">\r\n                    Copied!\r\n                </div>\r\n            </div>\r\n            <p>\r\n                А потом нужно построить админку.\r\n            </p>\r\n            <div class=\"code\">\r\n                <p>\r\n                    <span class=\"bash\">$ </span><span class=\"twigel\">./psh.phar </span> administration:build\r\n                </p>\r\n                <div class=\"copy\" data-cmd=\"sudo apt update\">\r\n                    Copy\r\n                </div>\r\n                <div class=\"copied\">\r\n                    Copied!\r\n                </div>\r\n            </div>\r\n        </div>\r\n</main>',	'2021-09-27 17:00:00'),
(4,	1,	1,	'Test',	'Test',	'Some text',	'2021-10-08 18:00:00');

DROP TABLE IF EXISTS `Author`;
CREATE TABLE `Author` (
  `id` int unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `role` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `password` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Author` (`id`, `name`, `role`, `password`) VALUES
(1,	'VovchenkoMykyta',	'root',	'Mykyta1998'),
(2,	'XShep',	'root',	'XShep1000');

DROP TABLE IF EXISTS `Category`;
CREATE TABLE `Category` (
  `id` int unsigned NOT NULL AUTO_INCREMENT,
  `parent_id` int NOT NULL,
  `name` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Category` (`id`, `parent_id`, `name`) VALUES
(1,	0,	'Shopware 6');

-- 2021-10-09 16:47:24
